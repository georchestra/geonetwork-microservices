on:
  push:
  pull_request:
  release:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: "Checking out"
      uses: actions/checkout@v2

    - name: "Setting up Java"
      uses: actions/setup-java@v3
      with:
        distribution : 'temurin'
        java-version : '11'
        cache: 'maven'



    - name: "Rebuild the dependencies"
      run: ./mvnw clean install -P-docker -Dsearch_without_sql

    - name: "Generate an artifact"
      if: github.repository == 'georchestra/geonetwork-microservices' && github.ref == 'refs/heads/geor-main'
      run: |
        ./mvnw --no-transfer-progress -Dsearch_without_sql -B -f modules/services/searching/  \
          clean package spring-boot:repackage

    - name: "publish the jar"
      if: github.repository == 'georchestra/geonetwork-microservices' && github.ref == 'refs/heads/geor-main'
      uses: actions/upload-artifact@v1
      with:
        name: searching.jar
        path: modules/services/searching/target/searching.jar

    - name: "Generate a docker image"
      if : github.repository == 'georchestra/geonetwork-microservices' && github.ref == 'refs/heads/geor-main'
      run : docker build -f Dockerfile-searching -t georchestra/gn-cloud-searching:latest .

    - name: "Login onto docker.io"
      uses: azure/docker-login@v1
      if: github.repository == 'georchestra/geonetwork-microservices' && github.ref == 'refs/heads/geor-main'
      with:
        username: '${{ secrets.DOCKER_HUB_USERNAME }}'
        password: '${{ secrets.DOCKER_HUB_PASSWORD }}'

    - name: "publish the docker image on docker-hub"
      if: github.repository == 'georchestra/geonetwork-microservices' && github.ref == 'refs/heads/geor-main'
      run: |
        docker push docker.io/georchestra/gn-cloud-searching:latest
